/**
 * @fileoverview gRPC-Web generated client stub for forum
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.20.0
// source: forum.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as forum_pb from './forum_pb'; // proto import: "forum.proto"


export class ForumClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateFoodPost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/CreateFoodPost',
    grpcWeb.MethodType.UNARY,
    forum_pb.CreateFoodPostRequest,
    forum_pb.CreatePostResponse,
    (request: forum_pb.CreateFoodPostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.CreatePostResponse.deserializeBinary
  );

  createFoodPost(
    request: forum_pb.CreateFoodPostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.CreatePostResponse>;

  createFoodPost(
    request: forum_pb.CreateFoodPostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.CreatePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.CreatePostResponse>;

  createFoodPost(
    request: forum_pb.CreateFoodPostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.CreatePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/CreateFoodPost',
        request,
        metadata || {},
        this.methodDescriptorCreateFoodPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/CreateFoodPost',
    request,
    metadata || {},
    this.methodDescriptorCreateFoodPost);
  }

  methodDescriptorCreateAmusementPost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/CreateAmusementPost',
    grpcWeb.MethodType.UNARY,
    forum_pb.CreateAmusementPostRequest,
    forum_pb.CreatePostResponse,
    (request: forum_pb.CreateAmusementPostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.CreatePostResponse.deserializeBinary
  );

  createAmusementPost(
    request: forum_pb.CreateAmusementPostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.CreatePostResponse>;

  createAmusementPost(
    request: forum_pb.CreateAmusementPostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.CreatePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.CreatePostResponse>;

  createAmusementPost(
    request: forum_pb.CreateAmusementPostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.CreatePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/CreateAmusementPost',
        request,
        metadata || {},
        this.methodDescriptorCreateAmusementPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/CreateAmusementPost',
    request,
    metadata || {},
    this.methodDescriptorCreateAmusementPost);
  }

  methodDescriptorCreateSellPost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/CreateSellPost',
    grpcWeb.MethodType.UNARY,
    forum_pb.CreateSellPostRequest,
    forum_pb.CreatePostResponse,
    (request: forum_pb.CreateSellPostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.CreatePostResponse.deserializeBinary
  );

  createSellPost(
    request: forum_pb.CreateSellPostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.CreatePostResponse>;

  createSellPost(
    request: forum_pb.CreateSellPostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.CreatePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.CreatePostResponse>;

  createSellPost(
    request: forum_pb.CreateSellPostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.CreatePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/CreateSellPost',
        request,
        metadata || {},
        this.methodDescriptorCreateSellPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/CreateSellPost',
    request,
    metadata || {},
    this.methodDescriptorCreateSellPost);
  }

  methodDescriptorDeletePost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/DeletePost',
    grpcWeb.MethodType.UNARY,
    forum_pb.DeletePostRequest,
    forum_pb.DeletePostResponse,
    (request: forum_pb.DeletePostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.DeletePostResponse.deserializeBinary
  );

  deletePost(
    request: forum_pb.DeletePostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.DeletePostResponse>;

  deletePost(
    request: forum_pb.DeletePostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.DeletePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.DeletePostResponse>;

  deletePost(
    request: forum_pb.DeletePostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.DeletePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/DeletePost',
        request,
        metadata || {},
        this.methodDescriptorDeletePost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/DeletePost',
    request,
    metadata || {},
    this.methodDescriptorDeletePost);
  }

  methodDescriptorGetFoodPost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/GetFoodPost',
    grpcWeb.MethodType.UNARY,
    forum_pb.GetPostRequest,
    forum_pb.GetFoodPostResponse,
    (request: forum_pb.GetPostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.GetFoodPostResponse.deserializeBinary
  );

  getFoodPost(
    request: forum_pb.GetPostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.GetFoodPostResponse>;

  getFoodPost(
    request: forum_pb.GetPostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.GetFoodPostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.GetFoodPostResponse>;

  getFoodPost(
    request: forum_pb.GetPostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.GetFoodPostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/GetFoodPost',
        request,
        metadata || {},
        this.methodDescriptorGetFoodPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/GetFoodPost',
    request,
    metadata || {},
    this.methodDescriptorGetFoodPost);
  }

  methodDescriptorGetAmusementPost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/GetAmusementPost',
    grpcWeb.MethodType.UNARY,
    forum_pb.GetPostRequest,
    forum_pb.GetAmusementPostResponse,
    (request: forum_pb.GetPostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.GetAmusementPostResponse.deserializeBinary
  );

  getAmusementPost(
    request: forum_pb.GetPostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.GetAmusementPostResponse>;

  getAmusementPost(
    request: forum_pb.GetPostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.GetAmusementPostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.GetAmusementPostResponse>;

  getAmusementPost(
    request: forum_pb.GetPostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.GetAmusementPostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/GetAmusementPost',
        request,
        metadata || {},
        this.methodDescriptorGetAmusementPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/GetAmusementPost',
    request,
    metadata || {},
    this.methodDescriptorGetAmusementPost);
  }

  methodDescriptorGetSellPost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/GetSellPost',
    grpcWeb.MethodType.UNARY,
    forum_pb.GetPostRequest,
    forum_pb.GetSellPostResponse,
    (request: forum_pb.GetPostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.GetSellPostResponse.deserializeBinary
  );

  getSellPost(
    request: forum_pb.GetPostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.GetSellPostResponse>;

  getSellPost(
    request: forum_pb.GetPostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.GetSellPostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.GetSellPostResponse>;

  getSellPost(
    request: forum_pb.GetPostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.GetSellPostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/GetSellPost',
        request,
        metadata || {},
        this.methodDescriptorGetSellPost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/GetSellPost',
    request,
    metadata || {},
    this.methodDescriptorGetSellPost);
  }

  methodDescriptorListPersonalPosts = new grpcWeb.MethodDescriptor(
    '/forum.Forum/ListPersonalPosts',
    grpcWeb.MethodType.UNARY,
    forum_pb.ListPersonalPostsRequest,
    forum_pb.ListPersonalPostsResponse,
    (request: forum_pb.ListPersonalPostsRequest) => {
      return request.serializeBinary();
    },
    forum_pb.ListPersonalPostsResponse.deserializeBinary
  );

  listPersonalPosts(
    request: forum_pb.ListPersonalPostsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.ListPersonalPostsResponse>;

  listPersonalPosts(
    request: forum_pb.ListPersonalPostsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.ListPersonalPostsResponse) => void): grpcWeb.ClientReadableStream<forum_pb.ListPersonalPostsResponse>;

  listPersonalPosts(
    request: forum_pb.ListPersonalPostsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.ListPersonalPostsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/ListPersonalPosts',
        request,
        metadata || {},
        this.methodDescriptorListPersonalPosts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/ListPersonalPosts',
    request,
    metadata || {},
    this.methodDescriptorListPersonalPosts);
  }

  methodDescriptorListFoodPosts = new grpcWeb.MethodDescriptor(
    '/forum.Forum/ListFoodPosts',
    grpcWeb.MethodType.UNARY,
    forum_pb.ListFoodPostsRequest,
    forum_pb.ListFoodPostsResponse,
    (request: forum_pb.ListFoodPostsRequest) => {
      return request.serializeBinary();
    },
    forum_pb.ListFoodPostsResponse.deserializeBinary
  );

  listFoodPosts(
    request: forum_pb.ListFoodPostsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.ListFoodPostsResponse>;

  listFoodPosts(
    request: forum_pb.ListFoodPostsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.ListFoodPostsResponse) => void): grpcWeb.ClientReadableStream<forum_pb.ListFoodPostsResponse>;

  listFoodPosts(
    request: forum_pb.ListFoodPostsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.ListFoodPostsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/ListFoodPosts',
        request,
        metadata || {},
        this.methodDescriptorListFoodPosts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/ListFoodPosts',
    request,
    metadata || {},
    this.methodDescriptorListFoodPosts);
  }

  methodDescriptorListSellPosts = new grpcWeb.MethodDescriptor(
    '/forum.Forum/ListSellPosts',
    grpcWeb.MethodType.UNARY,
    forum_pb.ListSellPostsRequest,
    forum_pb.ListSellPostsResponse,
    (request: forum_pb.ListSellPostsRequest) => {
      return request.serializeBinary();
    },
    forum_pb.ListSellPostsResponse.deserializeBinary
  );

  listSellPosts(
    request: forum_pb.ListSellPostsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.ListSellPostsResponse>;

  listSellPosts(
    request: forum_pb.ListSellPostsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.ListSellPostsResponse) => void): grpcWeb.ClientReadableStream<forum_pb.ListSellPostsResponse>;

  listSellPosts(
    request: forum_pb.ListSellPostsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.ListSellPostsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/ListSellPosts',
        request,
        metadata || {},
        this.methodDescriptorListSellPosts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/ListSellPosts',
    request,
    metadata || {},
    this.methodDescriptorListSellPosts);
  }

  methodDescriptorListAmusementPosts = new grpcWeb.MethodDescriptor(
    '/forum.Forum/ListAmusementPosts',
    grpcWeb.MethodType.UNARY,
    forum_pb.ListAmusementPostsRequest,
    forum_pb.ListAmusementPostsResponse,
    (request: forum_pb.ListAmusementPostsRequest) => {
      return request.serializeBinary();
    },
    forum_pb.ListAmusementPostsResponse.deserializeBinary
  );

  listAmusementPosts(
    request: forum_pb.ListAmusementPostsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.ListAmusementPostsResponse>;

  listAmusementPosts(
    request: forum_pb.ListAmusementPostsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.ListAmusementPostsResponse) => void): grpcWeb.ClientReadableStream<forum_pb.ListAmusementPostsResponse>;

  listAmusementPosts(
    request: forum_pb.ListAmusementPostsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.ListAmusementPostsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/ListAmusementPosts',
        request,
        metadata || {},
        this.methodDescriptorListAmusementPosts,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/ListAmusementPosts',
    request,
    metadata || {},
    this.methodDescriptorListAmusementPosts);
  }

  methodDescriptorComment = new grpcWeb.MethodDescriptor(
    '/forum.Forum/Comment',
    grpcWeb.MethodType.UNARY,
    forum_pb.CommentRequest,
    forum_pb.CommentResponse,
    (request: forum_pb.CommentRequest) => {
      return request.serializeBinary();
    },
    forum_pb.CommentResponse.deserializeBinary
  );

  comment(
    request: forum_pb.CommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.CommentResponse>;

  comment(
    request: forum_pb.CommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.CommentResponse) => void): grpcWeb.ClientReadableStream<forum_pb.CommentResponse>;

  comment(
    request: forum_pb.CommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.CommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/Comment',
        request,
        metadata || {},
        this.methodDescriptorComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/Comment',
    request,
    metadata || {},
    this.methodDescriptorComment);
  }

  methodDescriptorDeleteComment = new grpcWeb.MethodDescriptor(
    '/forum.Forum/DeleteComment',
    grpcWeb.MethodType.UNARY,
    forum_pb.DeleteCommentRequest,
    forum_pb.DeleteCommentResponse,
    (request: forum_pb.DeleteCommentRequest) => {
      return request.serializeBinary();
    },
    forum_pb.DeleteCommentResponse.deserializeBinary
  );

  deleteComment(
    request: forum_pb.DeleteCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.DeleteCommentResponse>;

  deleteComment(
    request: forum_pb.DeleteCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.DeleteCommentResponse) => void): grpcWeb.ClientReadableStream<forum_pb.DeleteCommentResponse>;

  deleteComment(
    request: forum_pb.DeleteCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.DeleteCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/DeleteComment',
        request,
        metadata || {},
        this.methodDescriptorDeleteComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/DeleteComment',
    request,
    metadata || {},
    this.methodDescriptorDeleteComment);
  }

  methodDescriptorLikePost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/LikePost',
    grpcWeb.MethodType.UNARY,
    forum_pb.LikePostRequest,
    forum_pb.LikePostResponse,
    (request: forum_pb.LikePostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.LikePostResponse.deserializeBinary
  );

  likePost(
    request: forum_pb.LikePostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.LikePostResponse>;

  likePost(
    request: forum_pb.LikePostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.LikePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.LikePostResponse>;

  likePost(
    request: forum_pb.LikePostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.LikePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/LikePost',
        request,
        metadata || {},
        this.methodDescriptorLikePost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/LikePost',
    request,
    metadata || {},
    this.methodDescriptorLikePost);
  }

  methodDescriptorUnlikePost = new grpcWeb.MethodDescriptor(
    '/forum.Forum/UnlikePost',
    grpcWeb.MethodType.UNARY,
    forum_pb.UnlikePostRequest,
    forum_pb.UnlikePostResponse,
    (request: forum_pb.UnlikePostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.UnlikePostResponse.deserializeBinary
  );

  unlikePost(
    request: forum_pb.UnlikePostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.UnlikePostResponse>;

  unlikePost(
    request: forum_pb.UnlikePostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.UnlikePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.UnlikePostResponse>;

  unlikePost(
    request: forum_pb.UnlikePostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.UnlikePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/UnlikePost',
        request,
        metadata || {},
        this.methodDescriptorUnlikePost,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/UnlikePost',
    request,
    metadata || {},
    this.methodDescriptorUnlikePost);
  }

  methodDescriptorLikeComment = new grpcWeb.MethodDescriptor(
    '/forum.Forum/LikeComment',
    grpcWeb.MethodType.UNARY,
    forum_pb.LikeCommentRequest,
    forum_pb.LikeCommentResponse,
    (request: forum_pb.LikeCommentRequest) => {
      return request.serializeBinary();
    },
    forum_pb.LikeCommentResponse.deserializeBinary
  );

  likeComment(
    request: forum_pb.LikeCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.LikeCommentResponse>;

  likeComment(
    request: forum_pb.LikeCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.LikeCommentResponse) => void): grpcWeb.ClientReadableStream<forum_pb.LikeCommentResponse>;

  likeComment(
    request: forum_pb.LikeCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.LikeCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/LikeComment',
        request,
        metadata || {},
        this.methodDescriptorLikeComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/LikeComment',
    request,
    metadata || {},
    this.methodDescriptorLikeComment);
  }

  methodDescriptorUnlikeComment = new grpcWeb.MethodDescriptor(
    '/forum.Forum/UnlikeComment',
    grpcWeb.MethodType.UNARY,
    forum_pb.UnlikeCommentRequest,
    forum_pb.UnlikeCommentResponse,
    (request: forum_pb.UnlikeCommentRequest) => {
      return request.serializeBinary();
    },
    forum_pb.UnlikeCommentResponse.deserializeBinary
  );

  unlikeComment(
    request: forum_pb.UnlikeCommentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.UnlikeCommentResponse>;

  unlikeComment(
    request: forum_pb.UnlikeCommentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.UnlikeCommentResponse) => void): grpcWeb.ClientReadableStream<forum_pb.UnlikeCommentResponse>;

  unlikeComment(
    request: forum_pb.UnlikeCommentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.UnlikeCommentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/UnlikeComment',
        request,
        metadata || {},
        this.methodDescriptorUnlikeComment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/UnlikeComment',
    request,
    metadata || {},
    this.methodDescriptorUnlikeComment);
  }

  methodDescriptorFavorate = new grpcWeb.MethodDescriptor(
    '/forum.Forum/Favorate',
    grpcWeb.MethodType.UNARY,
    forum_pb.FavorateRequest,
    forum_pb.FavorateResponse,
    (request: forum_pb.FavorateRequest) => {
      return request.serializeBinary();
    },
    forum_pb.FavorateResponse.deserializeBinary
  );

  favorate(
    request: forum_pb.FavorateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.FavorateResponse>;

  favorate(
    request: forum_pb.FavorateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.FavorateResponse) => void): grpcWeb.ClientReadableStream<forum_pb.FavorateResponse>;

  favorate(
    request: forum_pb.FavorateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.FavorateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/Favorate',
        request,
        metadata || {},
        this.methodDescriptorFavorate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/Favorate',
    request,
    metadata || {},
    this.methodDescriptorFavorate);
  }

  methodDescriptorUnfavorate = new grpcWeb.MethodDescriptor(
    '/forum.Forum/Unfavorate',
    grpcWeb.MethodType.UNARY,
    forum_pb.UnfavorateRequest,
    forum_pb.UnfavorateResponse,
    (request: forum_pb.UnfavorateRequest) => {
      return request.serializeBinary();
    },
    forum_pb.UnfavorateResponse.deserializeBinary
  );

  unfavorate(
    request: forum_pb.UnfavorateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.UnfavorateResponse>;

  unfavorate(
    request: forum_pb.UnfavorateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.UnfavorateResponse) => void): grpcWeb.ClientReadableStream<forum_pb.UnfavorateResponse>;

  unfavorate(
    request: forum_pb.UnfavorateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.UnfavorateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/Unfavorate',
        request,
        metadata || {},
        this.methodDescriptorUnfavorate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/Unfavorate',
    request,
    metadata || {},
    this.methodDescriptorUnfavorate);
  }

  methodDescriptorTakePart = new grpcWeb.MethodDescriptor(
    '/forum.Forum/TakePart',
    grpcWeb.MethodType.UNARY,
    forum_pb.TakePartAmusePostRequest,
    forum_pb.TakePartAmusePostResponse,
    (request: forum_pb.TakePartAmusePostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.TakePartAmusePostResponse.deserializeBinary
  );

  takePart(
    request: forum_pb.TakePartAmusePostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.TakePartAmusePostResponse>;

  takePart(
    request: forum_pb.TakePartAmusePostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.TakePartAmusePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.TakePartAmusePostResponse>;

  takePart(
    request: forum_pb.TakePartAmusePostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.TakePartAmusePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/TakePart',
        request,
        metadata || {},
        this.methodDescriptorTakePart,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/TakePart',
    request,
    metadata || {},
    this.methodDescriptorTakePart);
  }

  methodDescriptorNoTakePart = new grpcWeb.MethodDescriptor(
    '/forum.Forum/NoTakePart',
    grpcWeb.MethodType.UNARY,
    forum_pb.NoTakePartAmusePostRequest,
    forum_pb.NoTakePartAmusePostResponse,
    (request: forum_pb.NoTakePartAmusePostRequest) => {
      return request.serializeBinary();
    },
    forum_pb.NoTakePartAmusePostResponse.deserializeBinary
  );

  noTakePart(
    request: forum_pb.NoTakePartAmusePostRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.NoTakePartAmusePostResponse>;

  noTakePart(
    request: forum_pb.NoTakePartAmusePostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.NoTakePartAmusePostResponse) => void): grpcWeb.ClientReadableStream<forum_pb.NoTakePartAmusePostResponse>;

  noTakePart(
    request: forum_pb.NoTakePartAmusePostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.NoTakePartAmusePostResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/NoTakePart',
        request,
        metadata || {},
        this.methodDescriptorNoTakePart,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/NoTakePart',
    request,
    metadata || {},
    this.methodDescriptorNoTakePart);
  }

  methodDescriptorSetSold = new grpcWeb.MethodDescriptor(
    '/forum.Forum/SetSold',
    grpcWeb.MethodType.UNARY,
    forum_pb.SetSoldRequest,
    forum_pb.SetSoldResponse,
    (request: forum_pb.SetSoldRequest) => {
      return request.serializeBinary();
    },
    forum_pb.SetSoldResponse.deserializeBinary
  );

  setSold(
    request: forum_pb.SetSoldRequest,
    metadata?: grpcWeb.Metadata | null): Promise<forum_pb.SetSoldResponse>;

  setSold(
    request: forum_pb.SetSoldRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: forum_pb.SetSoldResponse) => void): grpcWeb.ClientReadableStream<forum_pb.SetSoldResponse>;

  setSold(
    request: forum_pb.SetSoldRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: forum_pb.SetSoldResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/forum.Forum/SetSold',
        request,
        metadata || {},
        this.methodDescriptorSetSold,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/forum.Forum/SetSold',
    request,
    metadata || {},
    this.methodDescriptorSetSold);
  }

}

